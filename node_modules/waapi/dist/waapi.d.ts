export declare const ak: {
    soundengine: {
        setMultiplePositions: string;
        setScalingFactor: string;
        postEvent: string;
        setRTPCValue: string;
        setObjectObstructionAndOcclusion: string;
        setListeners: string;
        executeActionOnEvent: string;
        setListenerSpatialization: string;
        resetRTPCValue: string;
        unregisterGameObj: string;
        stopPlayingID: string;
        setGameObjectAuxSendValues: string;
        seekOnEvent: string;
        registerGameObj: string;
        setDefaultListeners: string;
        setPosition: string;
        postMsgMonitor: string;
        setGameObjectOutputBusVolume: string;
        setSwitch: string;
        stopAll: string;
        postTrigger: string;
    };
    wwise: {
        debug: {
            testAssert: string;
            assertFailed: string;
            enableAsserts: string;
        };
        core: {
            audioSourcePeaks: {
                getMinMaxPeaksInRegion: string;
                getMinMaxPeaksInTrimmedRegion: string;
            };
            remote: {
                getConnectionStatus: string;
                getAvailableConsoles: string;
                disconnect: string;
                connect: string;
            };
            getInfo: string;
            object: {
                referenceChanged: string;
                move: string;
                attenuationCurveLinkChanged: string;
                childAdded: string;
                getTypes: string;
                propertyChanged: string;
                create: string;
                get: string;
                preDeleted: string;
                nameChanged: string;
                postDeleted: string;
                notesChanged: string;
                setName: string;
                setNotes: string;
                setAttenuationCurve: string;
                setProperty: string;
                copy: string;
                isPropertyEnabled: string;
                getPropertyInfo: string;
                setReference: string;
                attenuationCurveChanged: string;
                created: string;
                childRemoved: string;
                getPropertyNames: string;
                getAttenuationCurve: string;
                curveChanged: string;
                delete_: string;
            };
            undo: {
                endGroup: string;
                cancelGroup: string;
                beginGroup: string;
            };
            project: {
                postClosed: string;
                loaded: string;
                preClosed: string;
                save: string;
            };
            transport: {
                getState: string;
                stateChanged: string;
                create: string;
                getList: string;
                destroy: string;
                executeAction: string;
            };
            soundbank: {
                getInclusions: string;
                setInclusions: string;
            };
            audio: {
                import_: string;
                importTabDelimited: string;
            };
            switchContainer: {
                removeAssignment: string;
                getAssignments: string;
                assignmentRemoved: string;
                addAssignment: string;
                assignmentAdded: string;
            };
            plugin: {
                getList: string;
                getProperty: string;
                getProperties: string;
            };
        };
        ui: {
            project: {
                close: string;
                open: string;
            };
            bringToForeground: string;
            commands: {
                execute: string;
                getCommands: string;
            };
            getSelectedObjects: string;
            selectionChanged: string;
        };
        waapi: {
            getTopics: string;
            getFunctions: string;
            getSchema: string;
        };
    };
};
